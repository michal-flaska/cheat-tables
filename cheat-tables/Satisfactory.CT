<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="45">
  <CheatEntries>
    <CheatEntry>
      <ID>8</ID>
      <Description>"Cheats created by @michal.flaska"</Description>
      <GroupHeader>1</GroupHeader>
    </CheatEntry>
    <CheatEntry>
      <ID>6</ID>
      <Description>"CHEAT ON/OFF"</Description>
      <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>5</ID>
          <Description>"SCRIPTS"</Description>
          <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>316402</ID>
              <Description>"RIGHT CLICK ON ITEMS TO DUPLICATE"</Description>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048,"FactoryGameSteam-FactoryGame-Win64-Shipping.dll"+7FE814) 
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
add [rbx+rax+28],r13d

exit:
jmp returnhere

"FactoryGameSteam-FactoryGame-Win64-Shipping.dll"+7FE814:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"FactoryGameSteam-FactoryGame-Win64-Shipping.dll"+7FE814:
db 44 29 6C 03 28
//sub [rbx+rax+28],r13d
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>316397</ID>
              <Description>"Fly"</Description>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Author:WarezLine }
[ENABLE]
aobscanmodule(iFly,FactoryGameSteam-FactoryGame-Win64-Shipping.dll,80 B9 11 02 00 00 01 48)
alloc(newmem,$1000,iFly)
label(code)
label(return)

newmem:
code:
  mov [iDisable],rcx
  mov byte ptr [rcx+211],5
  cmp byte ptr [rcx+211],01
  jmp return
iDisable:
  dq 0
iFly:
  jmp code
  nop 2
return:
registersymbol(iFly)

[DISABLE]
{$lua}
  writeInteger('[iDisable]+211',1)
{$asm}
iFly:
  db 80 B9 11 02 00 00 01
unregistersymbol(iFly)
dealloc(newmem)
{
FactoryGameSteam-FactoryGame-Win64-Shipping.dll+57B382 - 80B91102000001 - cmp byte ptr [rcx+211],01
}
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>315937</ID>
              <Description>"Super jump"</Description>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Author:WarezLine }
[ENABLE]
aobscanmodule(SuperJump,FactoryGameSteam-FactoryGame-Win64-Shipping.dll,F3 0F 5A C6 0F 28 74 24 20)
alloc(newmem,$1000,SuperJump)
label(code)
label(return)

newmem:
code:
  movss xmm6,[Strength]
  cvtss2sd xmm0,xmm6
  movaps xmm6,[rsp+20]
  jmp return
Strength:
  dq (float)1500
SuperJump:
  jmp code
  nop 4
return:
registersymbol(SuperJump)

[DISABLE]
SuperJump:
  db F3 0F 5A C6 0F 28 74 24 20
unregistersymbol(SuperJump)
dealloc(newmem)
{
FactoryGameSteam-FactoryGame-Win64-Shipping.dll+58F4FB - F30F5AC6 - cvtss2sd xmm0,xmm6
}
</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>9</ID>
      <Description>"----------------------------------------------------------------------------------------------------------------------------------------"</Description>
      <GroupHeader>1</GroupHeader>
    </CheatEntry>
    <CheatEntry>
      <ID>316398</ID>
      <Description>"Outdated"</Description>
      <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>26</ID>
          <Description>"BERYL NUTS"</Description>
          <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>25</ID>
              <Description>"Big nut boost from picking it up from trees "</Description>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048,"FactoryGameSteam-FactoryGame-Win64-Shipping.dll"+7CD8EB) 
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
add r8d,64 // Add 64 in hex (100 in decimal) resources - You can customize it
add [r13+28],r8d
mov rax,[rsi]

exit:
jmp returnhere

"FactoryGameSteam-FactoryGame-Win64-Shipping.dll"+7CD8EB:
jmp newmem
nop 2
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"FactoryGameSteam-FactoryGame-Win64-Shipping.dll"+7CD8EB:
db 45 01 45 28 48 8B 06
//add [r13+28],r8d
//mov rax,[rsi]
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>22</ID>
              <Description>"Eating it increases its count in inventory"</Description>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048,"FactoryGameSteam-FactoryGame-Win64-Shipping.dll"+7FED84) 
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
add [rbx+rax+28],r13d

exit:
jmp returnhere

"FactoryGameSteam-FactoryGame-Win64-Shipping.dll"+7FED84:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"FactoryGameSteam-FactoryGame-Win64-Shipping.dll"+7FED84:
db 44 29 6C 03 28
//sub [rbx+rax+28],r13d
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>23</ID>
              <Description>"Eating it does not decrease its count in inventory"</Description>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048,"FactoryGameSteam-FactoryGame-Win64-Shipping.dll"+7FED84) 
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
nop

exit:
jmp returnhere

"FactoryGameSteam-FactoryGame-Win64-Shipping.dll"+7FED84:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"FactoryGameSteam-FactoryGame-Win64-Shipping.dll"+7FED84:
db 44 29 6C 03 28
//sub [rbx+rax+28],r13d
</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>1</ID>
          <Description>"EVERYONE HAS GOD MODE"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048,"FactoryGameSteam-FactoryGame-Win64-Shipping.dll"+80B45A) 
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
nop

exit:
jmp returnhere

"FactoryGameSteam-FactoryGame-Win64-Shipping.dll"+80B45A:
jmp newmem
nop 3
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"FactoryGameSteam-FactoryGame-Win64-Shipping.dll"+80B45A:
db F3 0F 11 8D 64 01 00 00
//movss [rbp+FactoryGameSteam-CoreUObject-Win64-Shipping.dtor_list_head+24],xmm1
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>3</ID>
          <Description>"Crafting will add instead of decrease"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048,"FactoryGameSteam-FactoryGame-Win64-Shipping.dll"+7FC110) 
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
add [rax+rbx+28],edi
mov rax,[r14]

exit:
jmp returnhere

"FactoryGameSteam-FactoryGame-Win64-Shipping.dll"+7FC110:
jmp newmem
nop 2
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"FactoryGameSteam-FactoryGame-Win64-Shipping.dll"+7FC110:
db 29 7C 18 28 49 8B 06
//sub [rax+rbx+28],edi
//mov rax,[r14]
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>4</ID>
          <Description>"Right click on items in inventory to multiply them"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048,"FactoryGameSteam-FactoryGame-Win64-Shipping.dll"+7FED84) 
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
add [rbx+rax+28],r13d

exit:
jmp returnhere

"FactoryGameSteam-FactoryGame-Win64-Shipping.dll"+7FED84:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"FactoryGameSteam-FactoryGame-Win64-Shipping.dll"+7FED84:
db 44 29 6C 03 28
//sub [rbx+rax+28],r13d
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>12</ID>
          <Description>"Building stuff increases resources"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048,"FactoryGameSteam-FactoryGame-Win64-Shipping.dll"+7FC110) 
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
add [rax+rbx+28],edi
mov rax,[r14]

exit:
jmp returnhere

"FactoryGameSteam-FactoryGame-Win64-Shipping.dll"+7FC110:
jmp newmem
nop 2
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"FactoryGameSteam-FactoryGame-Win64-Shipping.dll"+7FC110:
db 29 7C 18 28 49 8B 06
//sub [rax+rbx+28],edi
//mov rax,[r14]
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>13</ID>
          <Description>"Building stuff does not decrease resources"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048,"FactoryGameSteam-FactoryGame-Win64-Shipping.dll"+7FC110) 
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
nop
mov rax,[r14]

exit:
jmp returnhere

"FactoryGameSteam-FactoryGame-Win64-Shipping.dll"+7FC110:
jmp newmem
nop 2
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"FactoryGameSteam-FactoryGame-Win64-Shipping.dll"+7FC110:
db 29 7C 18 28 49 8B 06
//sub [rax+rbx+28],edi
//mov rax,[r14]
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>15</ID>
          <Description>"Big mining resource boost (configurable)"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048,"FactoryGameSteam-FactoryGame-Win64-Shipping.dll"+7CD8EB) 
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
add r8d,64        // 64 in hex means 100 in decimal. You can configure it to any value you want :)
add [r13+28],r8d
mov rax,[rsi]

exit:
jmp returnhere

"FactoryGameSteam-FactoryGame-Win64-Shipping.dll"+7CD8EB:
jmp newmem
nop 2
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"FactoryGameSteam-FactoryGame-Win64-Shipping.dll"+7CD8EB:
db 45 01 45 28 48 8B 06
//add [r13+28],r8d
//mov rax,[rsi]
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>10</ID>
      <Description>"Development"</Description>
      <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>2</ID>
          <Description>"Iron Rod"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>21EBB724148</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>11</ID>
          <Description>"Cable"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>21EBB7241D8</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>14</ID>
          <Description>"Iron ore"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>21EBB724088</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>21</ID>
          <Description>"nut"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>21FCAC5E7D8</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>0</ID>
          <Description>"No description"</Description>
          <VariableType>Float</VariableType>
          <Address>1C61B949264</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>316401</ID>
      <Description>"----------------------------------------------------------------------------------------------------------------------------------------"</Description>
      <GroupHeader>1</GroupHeader>
    </CheatEntry>
    <CheatEntry>
      <ID>316400</ID>
      <Description>"No description"</Description>
      <VariableType>4 Bytes</VariableType>
      <Address>1AB9F6C0228</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>316403</ID>
      <Description>"No description"</Description>
      <VariableType>Float</VariableType>
      <Address>1ABA4185364</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>316404</ID>
      <Description>"GODMODE"</Description>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048,"FactoryGameSteam-FactoryGame-Win64-Shipping.dll"+80AEEA) 
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
nop

exit:
jmp returnhere

"FactoryGameSteam-FactoryGame-Win64-Shipping.dll"+80AEEA:
jmp newmem
nop 3
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"FactoryGameSteam-FactoryGame-Win64-Shipping.dll"+80AEEA:
db F3 0F 11 8D 64 01 00 00
//movss [rbp+FactoryGameSteam-GeometryCore-Win64-Shipping._Init_thread_epoch+4],xmm1
</AssemblerScript>
    </CheatEntry>
  </CheatEntries>
  <CheatCodes>
    <CodeEntry>
      <Description>Code :sub [rax+rbx+28],edi</Description>
      <AddressString>FactoryGameSteam-FactoryGame-Win64-Shipping.dll+7FC110</AddressString>
      <Before>
        <Byte>52</Byte>
        <Byte>48</Byte>
        <Byte>C1</Byte>
        <Byte>E3</Byte>
        <Byte>04</Byte>
      </Before>
      <Actual>
        <Byte>29</Byte>
        <Byte>7C</Byte>
        <Byte>18</Byte>
        <Byte>28</Byte>
      </Actual>
      <After>
        <Byte>49</Byte>
        <Byte>8B</Byte>
        <Byte>06</Byte>
        <Byte>4D</Byte>
        <Byte>63</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :mov [rax+rcx*8+28],00000000</Description>
      <AddressString>FactoryGameSteam-FactoryGame-Win64-Shipping.dll+7FC0F7</AddressString>
      <Before>
        <Byte>48</Byte>
        <Byte>03</Byte>
        <Byte>C9</Byte>
        <Byte>8B</Byte>
        <Byte>D6</Byte>
      </Before>
      <Actual>
        <Byte>C7</Byte>
        <Byte>44</Byte>
        <Byte>C8</Byte>
        <Byte>28</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>48</Byte>
        <Byte>8B</Byte>
        <Byte>4D</Byte>
        <Byte>77</Byte>
        <Byte>48</Byte>
      </After>
    </CodeEntry>
  </CheatCodes>
  <UserdefinedSymbols/>
</CheatTable>
